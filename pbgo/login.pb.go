// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: login.proto

package pbgo

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 登录操作
type CSLoginReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Platform      string                 `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"`                                 // 用户平台
	PhonePlatform int32                  `protobuf:"varint,2,opt,name=phone_platform,json=phonePlatform,proto3" json:"phone_platform,omitempty"` // 手机平台 android ios
	PlatformToken string                 `protobuf:"bytes,3,opt,name=platform_token,json=platformToken,proto3" json:"platform_token,omitempty"`  // 平台token验证登陆
	OpenId        string                 `protobuf:"bytes,4,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"`                       // 平台账号ID //sdkUserID
	GameVersion   int32                  `protobuf:"varint,7,opt,name=game_version,json=gameVersion,proto3" json:"game_version,omitempty"`       // 游戏版本号
	Ip            string                 `protobuf:"bytes,8,opt,name=ip,proto3" json:"ip,omitempty"`                                             // 客户端登陆时ip地址
	SelectZone    int32                  `protobuf:"varint,9,opt,name=select_zone,json=selectZone,proto3" json:"select_zone,omitempty"`          // 合服使用(先根据IP获取是否存在，不存在则创建)
	SubPlatform   string                 `protobuf:"bytes,10,opt,name=sub_platform,json=subPlatform,proto3" json:"sub_platform,omitempty"`       // 用户平台下的不同分发媒体
	UserId        string                 `protobuf:"bytes,11,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                      // userID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSLoginReq) Reset() {
	*x = CSLoginReq{}
	mi := &file_login_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSLoginReq) ProtoMessage() {}

func (x *CSLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_login_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSLoginReq.ProtoReflect.Descriptor instead.
func (*CSLoginReq) Descriptor() ([]byte, []int) {
	return file_login_proto_rawDescGZIP(), []int{0}
}

func (x *CSLoginReq) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *CSLoginReq) GetPhonePlatform() int32 {
	if x != nil {
		return x.PhonePlatform
	}
	return 0
}

func (x *CSLoginReq) GetPlatformToken() string {
	if x != nil {
		return x.PlatformToken
	}
	return ""
}

func (x *CSLoginReq) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *CSLoginReq) GetGameVersion() int32 {
	if x != nil {
		return x.GameVersion
	}
	return 0
}

func (x *CSLoginReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *CSLoginReq) GetSelectZone() int32 {
	if x != nil {
		return x.SelectZone
	}
	return 0
}

func (x *CSLoginReq) GetSubPlatform() string {
	if x != nil {
		return x.SubPlatform
	}
	return ""
}

func (x *CSLoginReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type SCLoginAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Error         int32                  `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"` // 错误码 0表示无错误
	ClientId      uint64                 `protobuf:"varint,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SCLoginAck) Reset() {
	*x = SCLoginAck{}
	mi := &file_login_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SCLoginAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCLoginAck) ProtoMessage() {}

func (x *SCLoginAck) ProtoReflect() protoreflect.Message {
	mi := &file_login_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCLoginAck.ProtoReflect.Descriptor instead.
func (*SCLoginAck) Descriptor() ([]byte, []int) {
	return file_login_proto_rawDescGZIP(), []int{1}
}

func (x *SCLoginAck) GetError() int32 {
	if x != nil {
		return x.Error
	}
	return 0
}

func (x *SCLoginAck) GetClientId() uint64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

var File_login_proto protoreflect.FileDescriptor

const file_login_proto_rawDesc = "" +
	"\n" +
	"\vlogin.proto\x12\x04pbgo\"\x9f\x02\n" +
	"\n" +
	"CSLoginReq\x12\x1a\n" +
	"\bplatform\x18\x01 \x01(\tR\bplatform\x12%\n" +
	"\x0ephone_platform\x18\x02 \x01(\x05R\rphonePlatform\x12%\n" +
	"\x0eplatform_token\x18\x03 \x01(\tR\rplatformToken\x12\x17\n" +
	"\aopen_id\x18\x04 \x01(\tR\x06openId\x12!\n" +
	"\fgame_version\x18\a \x01(\x05R\vgameVersion\x12\x0e\n" +
	"\x02ip\x18\b \x01(\tR\x02ip\x12\x1f\n" +
	"\vselect_zone\x18\t \x01(\x05R\n" +
	"selectZone\x12!\n" +
	"\fsub_platform\x18\n" +
	" \x01(\tR\vsubPlatform\x12\x17\n" +
	"\auser_id\x18\v \x01(\tR\x06userId\"?\n" +
	"\n" +
	"SCLoginAck\x12\x14\n" +
	"\x05error\x18\x01 \x01(\x05R\x05error\x12\x1b\n" +
	"\tclient_id\x18\x02 \x01(\x04R\bclientIdB\bZ\x06.;pbgob\x06proto3"

var (
	file_login_proto_rawDescOnce sync.Once
	file_login_proto_rawDescData []byte
)

func file_login_proto_rawDescGZIP() []byte {
	file_login_proto_rawDescOnce.Do(func() {
		file_login_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_login_proto_rawDesc), len(file_login_proto_rawDesc)))
	})
	return file_login_proto_rawDescData
}

var file_login_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_login_proto_goTypes = []any{
	(*CSLoginReq)(nil), // 0: pbgo.CSLoginReq
	(*SCLoginAck)(nil), // 1: pbgo.SCLoginAck
}
var file_login_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_login_proto_init() }
func file_login_proto_init() {
	if File_login_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_login_proto_rawDesc), len(file_login_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_login_proto_goTypes,
		DependencyIndexes: file_login_proto_depIdxs,
		MessageInfos:      file_login_proto_msgTypes,
	}.Build()
	File_login_proto = out.File
	file_login_proto_goTypes = nil
	file_login_proto_depIdxs = nil
}
